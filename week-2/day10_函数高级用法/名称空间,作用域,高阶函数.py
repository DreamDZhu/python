# 名称空间 ，也叫命名空间

'''
在python 解释器开始执行后，就会在内存中开辟一下空间，每当遇到一个变量的时候，就把变量名和值记录下来
但当遇到函数时，只是把函数名记录下来，生成函数名对应的内存地址，并不会执行。

内存中记录的，永远是变量与值的对应关系

全局命名空间，就是保存变量与值的对应关系，函数名与值的对应关系。全局命名空间，指的是当前py文件中的。跟其他的py文件没有任何关系
'''

a = 1
b = 2
def func():
    f = 5
    print(f)

# 运行到这里 程序的全局命名空间，只记录func 指向的内存地址
c = 3
func()
# 当运行完函数调用，会在全局命名空间中，创建一块临时命名空间 ，临时命名空间会随着函数的结束而被释放

# 临时命名空间，只记录函数体中的变量值对应关系!!!

# 内置名称空间：python源码给你提供的一些内置的函数，print,input等等。
print(666) #这句话产生的内存，就在内置名称空间中


'''
上述得：
python 分为三个空间：
内置名称空间（内置函数）
全局名称空间 （当前py文件）
局部名称空间 (当非内置函数被执行时才开辟)

# 加载顺序 （加载到内存中的顺序）： 内置 > 全局 > 局部（函数执行时加载）

'''
# 取值顺序 （就近原则） 打印的name 为 alex
# 也称：LEGB原则
name = '太白金星'
def func():
    name = 'alex'
    print(name)
func()

# 变量取值顺序： (从局部找时) 局部（临时）名称空间 -- > 全局名称空间  --> 内置名称空间

########################################
# 作用域
########################################
# python 中 只有两个作用域：全局作用域 和 全局作用域
 #全局作用域：包含内置名称空间 全局名称空间
 #局部作用域：局域名称空间

# 全局变量最好定义在文件开头
date = '周五'
def func():
    print(date) #局部可以引用全局的，全局的不能引用局部的，因为局部在执行完成后，函数内存空间就被释放了
func()

